#!/usr/bin/with-contenv bash

################################################################################
# /usr/local/bin/refresh
# ======================
# Copyright 2022-2023 austozi.
# Shell script to refresh the podcast feed.
################################################################################

update_ytdlp() {
	echo "poddie: Auto-updating yt-dlp..."
	python3 -m pip install -U yt-dlp
}

download_audio() {
	
	local show_url="$1"
	local slug="$2"
	local max_episodes="$3"
	local target_dir="/config/www/static/$slug"
	
	mkdir -p "$target_dir"
	
	echo "poddie: Downloading audio files (max: $max_episodes)..."
	yt-dlp -x --audio-format mp3 -o "$target_dir/%(title)s.%(ext)s" --max-downloads "$max_episodes" "$show_url"

	chown -R $PUID:$PGID "$target_dir"
	
}

process_show() {

	local show_title="$1"
	local show_url="$2"
	local show_icon="$3"
	local show_description="$4"
	local slug="$5"
	local max_episodes="$6"
	
	echo "poddie: Processing $show_title..."
	
	download_audio "$show_url" "$slug" "$max_episodes"
	
	generate_feed "$show_title" "$show_url" "$show_icon" "$show_description" "$slug"
	
	generate_html "$show_title" "$show_url" "$show_icon" "$show_description" "$slug"

}

generate_feed() {
	
	local show_title="$1"
	local show_url="$2"
	local show_icon="$3"
	local show_description="$4"
	local slug="$5"
	local target_dir="/config/www/static/$slug"
	local xml_file="$target_dir/feed.xml"
	
	echo "poddie: Generating RSS feed..."
	podcats --host localhost --port 5000 --title "$show_title" --link "$show_url" generate "$target_dir" > "$xml_file"
	
	sed -i "s|http://localhost:5000/static/|$PODDIE_BASE_URL/static/$slug/|g" "$xml_file"
	sed -E -i "s|<description>.+</description>|<description>$show_description</description>|" "$xml_file"
	sed -i "s|</link>|</link><image><url>$show_icon</url></image>|" "$xml_file"
	
	chown $PUID:$PGID "$xml_file"
	
}

generate_html() {

	local show_title="$1"
	local show_url="$2"
	local show_icon="$3"
	local show_description="$4"
	local slug="$5"
	local target_dir="/config/www/static/$slug"
	local html_file="$target_dir/index.html"
	
	echo "poddie: Generating HTML page..."
	echo "<!DOCTYPE html><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\"><head><meta charset=\"utf-8\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" /><title>$show_title</title><link rel=\"stylesheet\" href=\"https://cdn.simplecss.org/simple.min.css\"/></head><body><h1>$show_title</h1><p><a href=\"$show_url\" target=\"_blank\"><img src=\"$show_icon\" /></a></p><p>$show_description</p><p><a href=\"$show_url\" target=\"_blank\">More details</a></p><p><a href=\"feed.xml\" style=\"display: inline-block; padding: 10pt 20pt 10pt 20pt; background-color: navy; color: white; text-decoration: none; font-weight: bold;\">Subscribe</a></p></body></html>" > "$html_file"
	chown $PUID:$PGID "$html_file"
	
}

generate_index() {

	local html_file=/config/www/index.html
	
	local poddie_title=$PODDIE_TITLE
	local poddie_description=$PODDIE_DESCRIPTION
	local poddie_shows=$(niet -f json shows "$yaml")
	
	echo "poddie: Generating index page..."
	
	echo "<!DOCTYPE html><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\"><head><meta charset=\"utf-8\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" /><title>$poddie_title</title><link rel=\"stylesheet\" href=\"https://cdn.simplecss.org/simple.min.css\"/></head><body><h1>$poddie_title</h1><p>$poddie_description</p><ul>" > "$html_file"
	
	echo "$poddie_shows" | jq -c ".[]" | while read d; do 
		local show_title=$(echo "$d" | jq -cr .title)
		local show_description=$(echo "$d" | jq -cr .description)		
		local show_url=$(echo "$d" | jq -cr .url)
		local slug=$(echo "$show_url" | md5sum | cut -d " " -f 1)
		echo "<li><strong><a href=\"/static/$slug/\">$show_title</a></strong><br />$show_description</strong></li>" >> "$html_file"
	done
	
	echo "</ul></body></html>" >> "$html_file"
		
}

init() {

	update_ytdlp

	local yaml=/config/poddie/config.yml
	
	local poddie_shows=$(niet -f json shows "$yaml")
	
	echo "$poddie_shows" | jq -c ".[]" | while read d; do 
		local show_title=$(echo "$d" | jq -cr .title)
		local show_url=$(echo "$d" | jq -cr .url)
		local show_icon=$(echo "$d" | jq -cr .icon)
		local show_description=$(echo "$d" | jq -cr 'select(.description != null) | select(.description).description')
		local slug=$(echo "$show_url" | md5sum | cut -d " " -f 1)
		local max_episodes=$(echo "$d" | jq -cr 'select(.max_episodes != null) | select(.max_episodes).max_episodes')
		if [ ! -n "$max_episodes" ]; then
			max_episodes=10
		fi
		process_show "$show_title" "$show_url" "$show_icon" "$show_description" "$slug" "$max_episodes"
	done
	
	generate_index
}

init
